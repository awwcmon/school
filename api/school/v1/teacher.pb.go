// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v5.29.2
// source: api/school/v1/teacher.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	types "school/api/types"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTeacherRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	Age           int32                  `protobuf:"varint,2,opt,name=age,proto3" json:"age"`
	BornAt        string                 `protobuf:"bytes,3,opt,name=bornAt,proto3" json:"bornAt"`
	Job           *Job                   `protobuf:"bytes,4,opt,name=job,proto3" json:"job"`
	Books         []*Book                `protobuf:"bytes,5,rep,name=books,proto3" json:"books"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTeacherRequest) Reset() {
	*x = CreateTeacherRequest{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeacherRequest) ProtoMessage() {}

func (x *CreateTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeacherRequest.ProtoReflect.Descriptor instead.
func (*CreateTeacherRequest) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTeacherRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTeacherRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *CreateTeacherRequest) GetBornAt() string {
	if x != nil {
		return x.BornAt
	}
	return ""
}

func (x *CreateTeacherRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *CreateTeacherRequest) GetBooks() []*Book {
	if x != nil {
		return x.Books
	}
	return nil
}

type CreateTeacherReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTeacherReply) Reset() {
	*x = CreateTeacherReply{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTeacherReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTeacherReply) ProtoMessage() {}

func (x *CreateTeacherReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTeacherReply.ProtoReflect.Descriptor instead.
func (*CreateTeacherReply) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTeacherReply) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTeacherByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTeacherByIDRequest) Reset() {
	*x = DeleteTeacherByIDRequest{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTeacherByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeacherByIDRequest) ProtoMessage() {}

func (x *DeleteTeacherByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeacherByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteTeacherByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{2}
}

func (x *DeleteTeacherByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteTeacherByIDReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTeacherByIDReply) Reset() {
	*x = DeleteTeacherByIDReply{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTeacherByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeacherByIDReply) ProtoMessage() {}

func (x *DeleteTeacherByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeacherByIDReply.ProtoReflect.Descriptor instead.
func (*DeleteTeacherByIDReply) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{3}
}

type UpdateTeacherByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Age           int32                  `protobuf:"varint,3,opt,name=age,proto3" json:"age"`
	BornAt        string                 `protobuf:"bytes,4,opt,name=bornAt,proto3" json:"bornAt"`
	Job           *Job                   `protobuf:"bytes,5,opt,name=job,proto3" json:"job"`
	Book          *Book                  `protobuf:"bytes,6,opt,name=book,proto3" json:"book"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTeacherByIDRequest) Reset() {
	*x = UpdateTeacherByIDRequest{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTeacherByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeacherByIDRequest) ProtoMessage() {}

func (x *UpdateTeacherByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeacherByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateTeacherByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateTeacherByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTeacherByIDRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateTeacherByIDRequest) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *UpdateTeacherByIDRequest) GetBornAt() string {
	if x != nil {
		return x.BornAt
	}
	return ""
}

func (x *UpdateTeacherByIDRequest) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *UpdateTeacherByIDRequest) GetBook() *Book {
	if x != nil {
		return x.Book
	}
	return nil
}

type UpdateTeacherByIDReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTeacherByIDReply) Reset() {
	*x = UpdateTeacherByIDReply{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTeacherByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTeacherByIDReply) ProtoMessage() {}

func (x *UpdateTeacherByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTeacherByIDReply.ProtoReflect.Descriptor instead.
func (*UpdateTeacherByIDReply) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{5}
}

type Teacher struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name"`
	Age           int32                  `protobuf:"varint,3,opt,name=age,proto3" json:"age"`
	BornAt        string                 `protobuf:"bytes,4,opt,name=bornAt,proto3" json:"bornAt"`
	Job           *Job                   `protobuf:"bytes,5,opt,name=job,proto3" json:"job"`
	Books         []*Book                `protobuf:"bytes,6,rep,name=books,proto3" json:"books"`
	CreatedAt     string                 `protobuf:"bytes,7,opt,name=createdAt,proto3" json:"createdAt"`
	UpdatedAt     string                 `protobuf:"bytes,8,opt,name=updatedAt,proto3" json:"updatedAt"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Teacher) Reset() {
	*x = Teacher{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Teacher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Teacher) ProtoMessage() {}

func (x *Teacher) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Teacher.ProtoReflect.Descriptor instead.
func (*Teacher) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{6}
}

func (x *Teacher) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Teacher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Teacher) GetAge() int32 {
	if x != nil {
		return x.Age
	}
	return 0
}

func (x *Teacher) GetBornAt() string {
	if x != nil {
		return x.BornAt
	}
	return ""
}

func (x *Teacher) GetJob() *Job {
	if x != nil {
		return x.Job
	}
	return nil
}

func (x *Teacher) GetBooks() []*Book {
	if x != nil {
		return x.Books
	}
	return nil
}

func (x *Teacher) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Teacher) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type GetTeacherByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id" uri:"id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTeacherByIDRequest) Reset() {
	*x = GetTeacherByIDRequest{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeacherByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeacherByIDRequest) ProtoMessage() {}

func (x *GetTeacherByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeacherByIDRequest.ProtoReflect.Descriptor instead.
func (*GetTeacherByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{7}
}

func (x *GetTeacherByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetTeacherByIDReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Teacher       *Teacher               `protobuf:"bytes,1,opt,name=teacher,proto3" json:"teacher"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTeacherByIDReply) Reset() {
	*x = GetTeacherByIDReply{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeacherByIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeacherByIDReply) ProtoMessage() {}

func (x *GetTeacherByIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeacherByIDReply.ProtoReflect.Descriptor instead.
func (*GetTeacherByIDReply) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{8}
}

func (x *GetTeacherByIDReply) GetTeacher() *Teacher {
	if x != nil {
		return x.Teacher
	}
	return nil
}

type ListTeacherRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Params        *types.Params          `protobuf:"bytes,1,opt,name=params,proto3" json:"params"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeacherRequest) Reset() {
	*x = ListTeacherRequest{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeacherRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeacherRequest) ProtoMessage() {}

func (x *ListTeacherRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeacherRequest.ProtoReflect.Descriptor instead.
func (*ListTeacherRequest) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{9}
}

func (x *ListTeacherRequest) GetParams() *types.Params {
	if x != nil {
		return x.Params
	}
	return nil
}

type ListTeacherReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total"`
	Teachers      []*Teacher             `protobuf:"bytes,2,rep,name=teachers,proto3" json:"teachers"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeacherReply) Reset() {
	*x = ListTeacherReply{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeacherReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeacherReply) ProtoMessage() {}

func (x *ListTeacherReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeacherReply.ProtoReflect.Descriptor instead.
func (*ListTeacherReply) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{10}
}

func (x *ListTeacherReply) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListTeacherReply) GetTeachers() []*Teacher {
	if x != nil {
		return x.Teachers
	}
	return nil
}

type DeleteTeacherByIDsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTeacherByIDsRequest) Reset() {
	*x = DeleteTeacherByIDsRequest{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTeacherByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeacherByIDsRequest) ProtoMessage() {}

func (x *DeleteTeacherByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeacherByIDsRequest.ProtoReflect.Descriptor instead.
func (*DeleteTeacherByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteTeacherByIDsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type DeleteTeacherByIDsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTeacherByIDsReply) Reset() {
	*x = DeleteTeacherByIDsReply{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTeacherByIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTeacherByIDsReply) ProtoMessage() {}

func (x *DeleteTeacherByIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTeacherByIDsReply.ProtoReflect.Descriptor instead.
func (*DeleteTeacherByIDsReply) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{12}
}

type GetTeacherByConditionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Conditions    *types.Conditions      `protobuf:"bytes,1,opt,name=conditions,proto3" json:"conditions"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTeacherByConditionRequest) Reset() {
	*x = GetTeacherByConditionRequest{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeacherByConditionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeacherByConditionRequest) ProtoMessage() {}

func (x *GetTeacherByConditionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeacherByConditionRequest.ProtoReflect.Descriptor instead.
func (*GetTeacherByConditionRequest) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{13}
}

func (x *GetTeacherByConditionRequest) GetConditions() *types.Conditions {
	if x != nil {
		return x.Conditions
	}
	return nil
}

type GetTeacherByConditionReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Teacher       *Teacher               `protobuf:"bytes,1,opt,name=teacher,proto3" json:"teacher"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTeacherByConditionReply) Reset() {
	*x = GetTeacherByConditionReply{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTeacherByConditionReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTeacherByConditionReply) ProtoMessage() {}

func (x *GetTeacherByConditionReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTeacherByConditionReply.ProtoReflect.Descriptor instead.
func (*GetTeacherByConditionReply) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{14}
}

func (x *GetTeacherByConditionReply) GetTeacher() *Teacher {
	if x != nil {
		return x.Teacher
	}
	return nil
}

type ListTeacherByIDsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeacherByIDsRequest) Reset() {
	*x = ListTeacherByIDsRequest{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeacherByIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeacherByIDsRequest) ProtoMessage() {}

func (x *ListTeacherByIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeacherByIDsRequest.ProtoReflect.Descriptor instead.
func (*ListTeacherByIDsRequest) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{15}
}

func (x *ListTeacherByIDsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type ListTeacherByIDsReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Teachers      []*Teacher             `protobuf:"bytes,1,rep,name=teachers,proto3" json:"teachers"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeacherByIDsReply) Reset() {
	*x = ListTeacherByIDsReply{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeacherByIDsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeacherByIDsReply) ProtoMessage() {}

func (x *ListTeacherByIDsReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeacherByIDsReply.ProtoReflect.Descriptor instead.
func (*ListTeacherByIDsReply) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{16}
}

func (x *ListTeacherByIDsReply) GetTeachers() []*Teacher {
	if x != nil {
		return x.Teachers
	}
	return nil
}

type ListTeacherByLastIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LastID        string                 `protobuf:"bytes,1,opt,name=lastID,proto3" json:"lastID" form:"lastID"` // last id
	Limit         uint32                 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit" form:"limit"`   // limit size per page
	Sort          string                 `protobuf:"bytes,3,opt,name=sort,proto3" json:"sort" form:"sort"`       // sort by column name of table, default is -id, the - sign indicates descending order.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeacherByLastIDRequest) Reset() {
	*x = ListTeacherByLastIDRequest{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeacherByLastIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeacherByLastIDRequest) ProtoMessage() {}

func (x *ListTeacherByLastIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeacherByLastIDRequest.ProtoReflect.Descriptor instead.
func (*ListTeacherByLastIDRequest) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{17}
}

func (x *ListTeacherByLastIDRequest) GetLastID() string {
	if x != nil {
		return x.LastID
	}
	return ""
}

func (x *ListTeacherByLastIDRequest) GetLimit() uint32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListTeacherByLastIDRequest) GetSort() string {
	if x != nil {
		return x.Sort
	}
	return ""
}

type ListTeacherByLastIDReply struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Teachers      []*Teacher             `protobuf:"bytes,1,rep,name=teachers,proto3" json:"teachers"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListTeacherByLastIDReply) Reset() {
	*x = ListTeacherByLastIDReply{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListTeacherByLastIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListTeacherByLastIDReply) ProtoMessage() {}

func (x *ListTeacherByLastIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListTeacherByLastIDReply.ProtoReflect.Descriptor instead.
func (*ListTeacherByLastIDReply) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{18}
}

func (x *ListTeacherByLastIDReply) GetTeachers() []*Teacher {
	if x != nil {
		return x.Teachers
	}
	return nil
}

type Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title"`
	Salary        int32                  `protobuf:"varint,2,opt,name=salary,proto3" json:"salary"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{19}
}

func (x *Job) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Job) GetSalary() int32 {
	if x != nil {
		return x.Salary
	}
	return 0
}

type Book struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        string                 `protobuf:"bytes,1,opt,name=fileId,proto3" json:"fileId"`
	FileName      string                 `protobuf:"bytes,2,opt,name=fileName,proto3" json:"fileName"`
	FileSize      int64                  `protobuf:"varint,3,opt,name=fileSize,proto3" json:"fileSize"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Book) Reset() {
	*x = Book{}
	mi := &file_api_school_v1_teacher_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Book) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Book) ProtoMessage() {}

func (x *Book) ProtoReflect() protoreflect.Message {
	mi := &file_api_school_v1_teacher_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Book.ProtoReflect.Descriptor instead.
func (*Book) Descriptor() ([]byte, []int) {
	return file_api_school_v1_teacher_proto_rawDescGZIP(), []int{20}
}

func (x *Book) GetFileId() string {
	if x != nil {
		return x.FileId
	}
	return ""
}

func (x *Book) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Book) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

var File_api_school_v1_teacher_proto protoreflect.FileDescriptor

var file_api_school_v1_teacher_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x2f,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x1a, 0x15, 0x61, 0x70,
	0x69, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x13, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x74, 0x61, 0x67, 0x67, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xa5, 0x01, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x62, 0x6f, 0x72, 0x6e, 0x41, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x62, 0x6f, 0x72, 0x6e, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x6a, 0x6f, 0x62, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62, 0x12, 0x29, 0x0a, 0x05,
	0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b,
	0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x22, 0x24, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x40, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x06, 0x9a, 0x84,
	0x9e, 0x03, 0x08, 0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x18, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0xcd, 0x01, 0x0a, 0x18, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x14, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x06, 0x9a, 0x84, 0x9e, 0x03, 0x08,
	0x75, 0x72, 0x69, 0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61,
	0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x72, 0x6e, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x72, 0x6e, 0x41, 0x74, 0x12, 0x24, 0x0a, 0x03, 0x6a, 0x6f,
	0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03, 0x6a, 0x6f, 0x62,
	0x12, 0x27, 0x0a, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x6f, 0x6f, 0x6b, 0x52, 0x04, 0x62, 0x6f, 0x6f, 0x6b, 0x22, 0x18, 0x0a, 0x16, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0xe4, 0x01, 0x0a, 0x07, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x6f, 0x72, 0x6e, 0x41, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x6f, 0x72, 0x6e, 0x41, 0x74, 0x12, 0x24, 0x0a,
	0x03, 0x6a, 0x6f, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4a, 0x6f, 0x62, 0x52, 0x03,
	0x6a, 0x6f, 0x62, 0x12, 0x29, 0x0a, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x42, 0x6f, 0x6f, 0x6b, 0x52, 0x05, 0x62, 0x6f, 0x6f, 0x6b, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3d, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x14, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x06, 0x9a, 0x84, 0x9e, 0x03, 0x08, 0x75, 0x72, 0x69,
	0x3a, 0x22, 0x69, 0x64, 0x22, 0x52, 0x02, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x30, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x22, 0x3f, 0x0a, 0x12, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x74,
	0x79, 0x70, 0x65, 0x73, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x5c, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x32, 0x0a,
	0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x73, 0x22, 0x37, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x55, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x4e, 0x0a, 0x1a,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x30, 0x0a, 0x07, 0x74, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x52, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x22, 0x35, 0x0a, 0x17,
	0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x92, 0x01, 0x02, 0x08, 0x01, 0x52, 0x03,
	0x69, 0x64, 0x73, 0x22, 0x4b, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a, 0x08,
	0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73,
	0x22, 0x9e, 0x01, 0x0a, 0x1a, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x2a, 0x0a, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x12, 0x9a, 0x84, 0x9e, 0x03, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x6c, 0x61, 0x73, 0x74,
	0x49, 0x44, 0x22, 0x52, 0x06, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12, 0x2e, 0x0a, 0x05, 0x6c,
	0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x18, 0xfa, 0x42, 0x04, 0x2a,
	0x02, 0x20, 0x00, 0x9a, 0x84, 0x9e, 0x03, 0x0c, 0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x22, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x24, 0x0a, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x10, 0x9a, 0x84, 0x9e, 0x03, 0x0b,
	0x66, 0x6f, 0x72, 0x6d, 0x3a, 0x22, 0x73, 0x6f, 0x72, 0x74, 0x22, 0x52, 0x04, 0x73, 0x6f, 0x72,
	0x74, 0x22, 0x4e, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x32, 0x0a,
	0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x08, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x73, 0x22, 0x33, 0x0a, 0x03, 0x4a, 0x6f, 0x62, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06,
	0x73, 0x61, 0x6c, 0x61, 0x72, 0x79, 0x22, 0x56, 0x0a, 0x04, 0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x16,
	0x0a, 0x06, 0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x66, 0x69, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x32, 0xef,
	0x08, 0x0a, 0x07, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x6c, 0x0a, 0x06, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68,
	0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1a, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x14, 0x3a, 0x01, 0x2a, 0x22, 0x0f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31,
	0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x12, 0x7a, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x42, 0x79, 0x49, 0x44, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68,
	0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x2a, 0x14,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x2f,
	0x7b, 0x69, 0x64, 0x7d, 0x12, 0x7d, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x12, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x1a, 0x14, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x7b,
	0x69, 0x64, 0x7d, 0x12, 0x71, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x24,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x22, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16,
	0x12, 0x14, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x2f, 0x7b, 0x69, 0x64, 0x7d, 0x12, 0x6b, 0x0a, 0x04, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76,
	0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f,
	0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x86, 0x01, 0x0a, 0x0b, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x79,
	0x49, 0x44, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x25, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1f, 0x3a, 0x01, 0x2a,
	0x22, 0x1a, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65,
	0x72, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2f, 0x69, 0x64, 0x73, 0x12, 0x8e, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a,
	0x01, 0x2a, 0x22, 0x19, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63,
	0x68, 0x65, 0x72, 0x2f, 0x63, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x7e, 0x0a,
	0x09, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x26, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54,
	0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d,
	0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61,
	0x63, 0x68, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x2f, 0x69, 0x64, 0x73, 0x12, 0x80, 0x01,
	0x0a, 0x0c, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x12, 0x29,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x54, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x54, 0x65,
	0x61, 0x63, 0x68, 0x65, 0x72, 0x42, 0x79, 0x4c, 0x61, 0x73, 0x74, 0x49, 0x44, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x61, 0x63, 0x68, 0x65, 0x72, 0x2f, 0x6c, 0x69, 0x73, 0x74,
	0x42, 0xb7, 0x01, 0x92, 0x41, 0x9a, 0x01, 0x12, 0x16, 0x0a, 0x0f, 0x73, 0x63, 0x68, 0x6f, 0x6f,
	0x6c, 0x20, 0x61, 0x70, 0x69, 0x20, 0x64, 0x6f, 0x63, 0x73, 0x32, 0x03, 0x32, 0x2e, 0x30, 0x1a,
	0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x2a,
	0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x5a, 0x48, 0x0a, 0x46, 0x0a, 0x0a, 0x42, 0x65, 0x61,
	0x72, 0x65, 0x72, 0x41, 0x75, 0x74, 0x68, 0x12, 0x38, 0x08, 0x02, 0x12, 0x23, 0x54, 0x79, 0x70,
	0x65, 0x20, 0x42, 0x65, 0x61, 0x72, 0x65, 0x72, 0x20, 0x79, 0x6f, 0x75, 0x72, 0x2d, 0x6a, 0x77,
	0x74, 0x2d, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x20, 0x74, 0x6f, 0x20, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x1a, 0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20,
	0x02, 0x5a, 0x17, 0x73, 0x63, 0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x63,
	0x68, 0x6f, 0x6f, 0x6c, 0x2f, 0x76, 0x31, 0x3b, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_api_school_v1_teacher_proto_rawDescOnce sync.Once
	file_api_school_v1_teacher_proto_rawDescData = file_api_school_v1_teacher_proto_rawDesc
)

func file_api_school_v1_teacher_proto_rawDescGZIP() []byte {
	file_api_school_v1_teacher_proto_rawDescOnce.Do(func() {
		file_api_school_v1_teacher_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_school_v1_teacher_proto_rawDescData)
	})
	return file_api_school_v1_teacher_proto_rawDescData
}

var file_api_school_v1_teacher_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_school_v1_teacher_proto_goTypes = []any{
	(*CreateTeacherRequest)(nil),         // 0: api.school.v1.CreateTeacherRequest
	(*CreateTeacherReply)(nil),           // 1: api.school.v1.CreateTeacherReply
	(*DeleteTeacherByIDRequest)(nil),     // 2: api.school.v1.DeleteTeacherByIDRequest
	(*DeleteTeacherByIDReply)(nil),       // 3: api.school.v1.DeleteTeacherByIDReply
	(*UpdateTeacherByIDRequest)(nil),     // 4: api.school.v1.UpdateTeacherByIDRequest
	(*UpdateTeacherByIDReply)(nil),       // 5: api.school.v1.UpdateTeacherByIDReply
	(*Teacher)(nil),                      // 6: api.school.v1.Teacher
	(*GetTeacherByIDRequest)(nil),        // 7: api.school.v1.GetTeacherByIDRequest
	(*GetTeacherByIDReply)(nil),          // 8: api.school.v1.GetTeacherByIDReply
	(*ListTeacherRequest)(nil),           // 9: api.school.v1.ListTeacherRequest
	(*ListTeacherReply)(nil),             // 10: api.school.v1.ListTeacherReply
	(*DeleteTeacherByIDsRequest)(nil),    // 11: api.school.v1.DeleteTeacherByIDsRequest
	(*DeleteTeacherByIDsReply)(nil),      // 12: api.school.v1.DeleteTeacherByIDsReply
	(*GetTeacherByConditionRequest)(nil), // 13: api.school.v1.GetTeacherByConditionRequest
	(*GetTeacherByConditionReply)(nil),   // 14: api.school.v1.GetTeacherByConditionReply
	(*ListTeacherByIDsRequest)(nil),      // 15: api.school.v1.ListTeacherByIDsRequest
	(*ListTeacherByIDsReply)(nil),        // 16: api.school.v1.ListTeacherByIDsReply
	(*ListTeacherByLastIDRequest)(nil),   // 17: api.school.v1.ListTeacherByLastIDRequest
	(*ListTeacherByLastIDReply)(nil),     // 18: api.school.v1.ListTeacherByLastIDReply
	(*Job)(nil),                          // 19: api.school.v1.Job
	(*Book)(nil),                         // 20: api.school.v1.Book
	(*types.Params)(nil),                 // 21: api.types.Params
	(*types.Conditions)(nil),             // 22: api.types.Conditions
}
var file_api_school_v1_teacher_proto_depIdxs = []int32{
	19, // 0: api.school.v1.CreateTeacherRequest.job:type_name -> api.school.v1.Job
	20, // 1: api.school.v1.CreateTeacherRequest.books:type_name -> api.school.v1.Book
	19, // 2: api.school.v1.UpdateTeacherByIDRequest.job:type_name -> api.school.v1.Job
	20, // 3: api.school.v1.UpdateTeacherByIDRequest.book:type_name -> api.school.v1.Book
	19, // 4: api.school.v1.Teacher.job:type_name -> api.school.v1.Job
	20, // 5: api.school.v1.Teacher.books:type_name -> api.school.v1.Book
	6,  // 6: api.school.v1.GetTeacherByIDReply.teacher:type_name -> api.school.v1.Teacher
	21, // 7: api.school.v1.ListTeacherRequest.params:type_name -> api.types.Params
	6,  // 8: api.school.v1.ListTeacherReply.teachers:type_name -> api.school.v1.Teacher
	22, // 9: api.school.v1.GetTeacherByConditionRequest.conditions:type_name -> api.types.Conditions
	6,  // 10: api.school.v1.GetTeacherByConditionReply.teacher:type_name -> api.school.v1.Teacher
	6,  // 11: api.school.v1.ListTeacherByIDsReply.teachers:type_name -> api.school.v1.Teacher
	6,  // 12: api.school.v1.ListTeacherByLastIDReply.teachers:type_name -> api.school.v1.Teacher
	0,  // 13: api.school.v1.teacher.Create:input_type -> api.school.v1.CreateTeacherRequest
	2,  // 14: api.school.v1.teacher.DeleteByID:input_type -> api.school.v1.DeleteTeacherByIDRequest
	4,  // 15: api.school.v1.teacher.UpdateByID:input_type -> api.school.v1.UpdateTeacherByIDRequest
	7,  // 16: api.school.v1.teacher.GetByID:input_type -> api.school.v1.GetTeacherByIDRequest
	9,  // 17: api.school.v1.teacher.List:input_type -> api.school.v1.ListTeacherRequest
	11, // 18: api.school.v1.teacher.DeleteByIDs:input_type -> api.school.v1.DeleteTeacherByIDsRequest
	13, // 19: api.school.v1.teacher.GetByCondition:input_type -> api.school.v1.GetTeacherByConditionRequest
	15, // 20: api.school.v1.teacher.ListByIDs:input_type -> api.school.v1.ListTeacherByIDsRequest
	17, // 21: api.school.v1.teacher.ListByLastID:input_type -> api.school.v1.ListTeacherByLastIDRequest
	1,  // 22: api.school.v1.teacher.Create:output_type -> api.school.v1.CreateTeacherReply
	3,  // 23: api.school.v1.teacher.DeleteByID:output_type -> api.school.v1.DeleteTeacherByIDReply
	5,  // 24: api.school.v1.teacher.UpdateByID:output_type -> api.school.v1.UpdateTeacherByIDReply
	8,  // 25: api.school.v1.teacher.GetByID:output_type -> api.school.v1.GetTeacherByIDReply
	10, // 26: api.school.v1.teacher.List:output_type -> api.school.v1.ListTeacherReply
	12, // 27: api.school.v1.teacher.DeleteByIDs:output_type -> api.school.v1.DeleteTeacherByIDsReply
	14, // 28: api.school.v1.teacher.GetByCondition:output_type -> api.school.v1.GetTeacherByConditionReply
	16, // 29: api.school.v1.teacher.ListByIDs:output_type -> api.school.v1.ListTeacherByIDsReply
	18, // 30: api.school.v1.teacher.ListByLastID:output_type -> api.school.v1.ListTeacherByLastIDReply
	22, // [22:31] is the sub-list for method output_type
	13, // [13:22] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_api_school_v1_teacher_proto_init() }
func file_api_school_v1_teacher_proto_init() {
	if File_api_school_v1_teacher_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_school_v1_teacher_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_school_v1_teacher_proto_goTypes,
		DependencyIndexes: file_api_school_v1_teacher_proto_depIdxs,
		MessageInfos:      file_api_school_v1_teacher_proto_msgTypes,
	}.Build()
	File_api_school_v1_teacher_proto = out.File
	file_api_school_v1_teacher_proto_rawDesc = nil
	file_api_school_v1_teacher_proto_goTypes = nil
	file_api_school_v1_teacher_proto_depIdxs = nil
}
