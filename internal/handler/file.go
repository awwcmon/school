// Code generated by https://github.com/go-dev-frame/sponge

package handler

import (
	"context"
	"crypto/md5"
	"encoding/hex"
	"fmt"
	"github.com/go-dev-frame/sponge/pkg/gin/middleware"
	"go.uber.org/zap"
	"io"
	"mime/multipart"
	"os"

	//"github.com/go-dev-frame/sponge/pkg/gin/middleware"

	schoolV1 "school/api/school/v1"
)

var _ schoolV1.FileLogicer = (*fileHandler)(nil)

type fileHandler struct {
	// example:
	// 	fileDao dao.FileDao
}

// NewFileHandler create a handler
func NewFileHandler() schoolV1.FileLogicer {
	return &fileHandler{
		// example:
		// 	fileDao: dao.NewFileDao(
		// 		database.GetDB(),
		// 		cache.NewFileCache(database.GetCacheType()),
		// 	),
	}
}

// CreateFile ......
func (h *fileHandler) CreateFile(ctx context.Context, req *schoolV1.UploadFileRequest) (*schoolV1.UploadFileResponse, error) {
	c, _ := middleware.AdaptCtx(ctx)
	fh, err := c.FormFile("file")
	if err != nil {
		return nil, err
	}
	file, err := fh.Open()
	fmt.Println(err)
	defer func(file multipart.File) {
		err := file.Close()
		if err != nil {
		}
	}(file)
	bytes, err := io.ReadAll(file)
	if err != nil {
		zap.Error(err)
		return nil, err
	}
	md5sum := md5.Sum(bytes)
	fileId := hex.EncodeToString(md5sum[:])
	fmt.Println("hahahahah", string(fileId[:]))
	targetFile, err := os.OpenFile("uploads/"+fileId, os.O_CREATE|os.O_WRONLY, 0666)
	if err != nil {
		zap.Error(err)
		return nil, err
	}
	defer func(targetFile *os.File) {
		err := targetFile.Close()
		if err != nil {
			zap.Error(err)

		}
	}(targetFile)
	_, err = targetFile.Write(bytes)
	if err != nil {
		zap.Error(err)
		return nil, err
	}
	fileinfo, err := os.Stat(targetFile.Name())
	if err != nil {
		zap.Error(err)

		return nil, err
	}
	return &schoolV1.UploadFileResponse{
		FileId:   fileinfo.Name(),
		FileName: fh.Filename,
		FileSize: fileinfo.Size(),
	}, nil
}

// DownloadFile ......
func (h *fileHandler) DownloadFile(ctx context.Context, req *schoolV1.DownloadFileRequest) (*schoolV1.DownloadFileResponse, error) {
	c, _ := middleware.AdaptCtx(ctx)
	c.File("uploads/" + c.Param("fileId"))
	return &schoolV1.DownloadFileResponse{}, nil
}
